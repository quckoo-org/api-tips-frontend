syntax = "proto3";

package grpc.user.v1;

import "role/v1/role.proto"; 
import "country/v1/country.proto"; 

import 'google/protobuf/timestamp.proto';

message User {
  int32 id = 1;
  string email = 2;
  optional string name = 3;
  optional string lastname = 4;
  optional string token = 5;
  optional grpc.country.v1.Country country = 6;
  bool isDeleted = 7;
  bool isBlocked = 8;
  bool isHidden = 9;
  optional string lastIp = 10;
  bool isVerified = 11;
  google.protobuf.Timestamp createdAt = 12;
  repeated grpc.role.v1.Role roles = 13;
}

service UserService {
  rpc createUser (CreateUserRequest) returns (UserResponse);
  rpc getUser (GetUserRequest) returns (UserResponse);
  rpc getAllUsers (ListUsersRequest) returns (ListUsersResponse);
  rpc updateUser (UpdateUserRequest) returns (UserResponse);
  rpc deleteUser (DeleteUserRequest) returns (DeleteUserResponse);
}

message CreateUserRequest {
  string email = 1;
  string name = 2;
  string lastname = 3;
  optional string token = 4;
  optional int32 countryId = 5;
  optional string lastIp = 9;
  optional bool isVerified = 10;
  repeated int32 roles = 11; 
}

message GetUserRequest {
  int32 id = 1;
}

message ListUsersRequest {
  int32 page = 1;
  int32 pageSize = 2;
  optional string search = 3;
  optional bool isBlocked = 4;
  optional bool isHidden = 5;
  optional bool isDeleted = 6;
  optional bool isVerified = 7;
}

message ListUsersResponse {
  repeated User rows = 1;
  int32 totalCount = 2;
  int32 currentPage = 3;
  int32 totalPages = 4;
}

message UpdateUserRequest {
  int32 id = 1;
  optional string email = 2;
  optional string name = 3;
  optional string lastname = 4;
  optional string token = 5;
  optional int32 countryId = 6;
  optional bool isDeleted = 7;
  optional bool isBlocked = 8;
  optional bool isHidden = 9;
  optional string lastIp = 10;
  optional bool isVerified = 11;
  repeated int32 roles = 12;
}

message DeleteUserRequest {
  int32 id = 1;
}

message UserResponse {
  User user = 1;
}

message DeleteUserResponse {
  bool success = 1;
}
